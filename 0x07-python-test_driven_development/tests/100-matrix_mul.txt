The ``100-matrix_mul`` module
==============================


Using ``matrix_mul``
-------------------

Import ``matrix_mul`` from the ``100-matrix_mul`` module:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

1x1:
    >>> matrix_mul([[2]], [[2]])
    [[4]]

2x2:
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

1x2 and 2x2 sized matricies:
     >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
     [[13, 16]]

Not a list
    >>> matrix_mul("hello", [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

Not a list
    >>> matrix_mul([[1, 2], [3, 4]], "hello")
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

Not a list of lists
    >>> matrix_mul([1, 2], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

Not a list of lists
    >>> matrix_mul([[1, 2], [3, 4]], [1, 2])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists

Empty list
     >>> matrix_mul([[]], [[42]])
     Traceback (most recent call last):
     ...
     ValueError: m_a can't be empty

Empty list
     >>> matrix_mul([[42]], [[]])
     Traceback (most recent call last):
     ...
     ValueError: m_b can't be empty

Not a int or float
    >>> matrix_mul([["hello darkness"]], [[66]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

Not a int or float
    >>> matrix_mul([[66]], [["my old friend"]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

Rows with different sizes
     >>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2]])
     Traceback (most recent call last):
     ...
     TypeError: each row of m_a must be of the same size

Rows with different sizes
     >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
     Traceback (most recent call last):
     ...
     TypeError: each row of m_b must be of the same size

Can't be multiplied
      >>> matrix_mul([[1, 2], [3, 4]], [[5, 6, 7]])
      Traceback (most recent call last):
      ...
      ValueError: m_a and m_b can't be multiplied

One argument missing
    >>> matrix_mul([[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

No argument
   >>> matrix_mul()
   Traceback (most recent call last):
   ...
   TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
